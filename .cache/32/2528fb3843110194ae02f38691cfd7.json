{"id":"DHXX","dependencies":[{"name":"/Users/hujy/GT/Spring20/3DU/3DPainter/node_modules/@babylonjs/core/Shaders/ShadersInclude/pbrDirectLightingFalloffFunctions.js.map","includedInParent":true,"mtime":1556745103000},{"name":"/Users/hujy/GT/Spring20/3DU/3DPainter/package.json","includedInParent":true,"mtime":1588539929318},{"name":"/Users/hujy/GT/Spring20/3DU/3DPainter/node_modules/@babylonjs/core/package.json","includedInParent":true,"mtime":1588537596306},{"name":"../../Materials/effect","loc":{"line":1,"column":23},"parent":"/Users/hujy/GT/Spring20/3DU/3DPainter/node_modules/@babylonjs/core/Shaders/ShadersInclude/pbrDirectLightingFalloffFunctions.js","resolved":"/Users/hujy/GT/Spring20/3DU/3DPainter/node_modules/@babylonjs/core/Materials/effect.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.pbrDirectLightingFalloffFunctions=void 0;var t=require(\"../../Materials/effect\"),e=\"pbrDirectLightingFalloffFunctions\",n=\"float computeDistanceLightFalloff_Standard(vec3 lightOffset,float range)\\n{\\nreturn max(0.,1.0-length(lightOffset)/range);\\n}\\nfloat computeDistanceLightFalloff_Physical(float lightDistanceSquared)\\n{\\nreturn 1.0/maxEps(lightDistanceSquared);\\n}\\nfloat computeDistanceLightFalloff_GLTF(float lightDistanceSquared,float inverseSquaredRange)\\n{\\nfloat lightDistanceFalloff=1.0/maxEps(lightDistanceSquared);\\nfloat factor=lightDistanceSquared*inverseSquaredRange;\\nfloat attenuation=saturate(1.0-factor*factor);\\nattenuation*=attenuation;\\n\\nlightDistanceFalloff*=attenuation;\\nreturn lightDistanceFalloff;\\n}\\nfloat computeDistanceLightFalloff(vec3 lightOffset,float lightDistanceSquared,float range,float inverseSquaredRange)\\n{\\n#ifdef USEPHYSICALLIGHTFALLOFF\\nreturn computeDistanceLightFalloff_Physical(lightDistanceSquared);\\n#elif defined(USEGLTFLIGHTFALLOFF)\\nreturn computeDistanceLightFalloff_GLTF(lightDistanceSquared,inverseSquaredRange);\\n#else\\nreturn computeDistanceLightFalloff_Standard(lightOffset,range);\\n#endif\\n}\\nfloat computeDirectionalLightFalloff_Standard(vec3 lightDirection,vec3 directionToLightCenterW,float cosHalfAngle,float exponent)\\n{\\nfloat falloff=0.0;\\nfloat cosAngle=maxEps(dot(-lightDirection,directionToLightCenterW));\\nif (cosAngle>=cosHalfAngle)\\n{\\nfalloff=max(0.,pow(cosAngle,exponent));\\n}\\nreturn falloff;\\n}\\nfloat computeDirectionalLightFalloff_Physical(vec3 lightDirection,vec3 directionToLightCenterW,float cosHalfAngle)\\n{\\nconst float kMinusLog2ConeAngleIntensityRatio=6.64385618977;\\n\\n\\n\\n\\n\\nfloat concentrationKappa=kMinusLog2ConeAngleIntensityRatio/(1.0-cosHalfAngle);\\n\\n\\nvec4 lightDirectionSpreadSG=vec4(-lightDirection*concentrationKappa,-concentrationKappa);\\nfloat falloff=exp2(dot(vec4(directionToLightCenterW,1.0),lightDirectionSpreadSG));\\nreturn falloff;\\n}\\nfloat computeDirectionalLightFalloff_GLTF(vec3 lightDirection,vec3 directionToLightCenterW,float lightAngleScale,float lightAngleOffset)\\n{\\n\\n\\n\\nfloat cd=dot(-lightDirection,directionToLightCenterW);\\nfloat falloff=saturate(cd*lightAngleScale+lightAngleOffset);\\n\\nfalloff*=falloff;\\nreturn falloff;\\n}\\nfloat computeDirectionalLightFalloff(vec3 lightDirection,vec3 directionToLightCenterW,float cosHalfAngle,float exponent,float lightAngleScale,float lightAngleOffset)\\n{\\n#ifdef USEPHYSICALLIGHTFALLOFF\\nreturn computeDirectionalLightFalloff_Physical(lightDirection,directionToLightCenterW,cosHalfAngle);\\n#elif defined(USEGLTFLIGHTFALLOFF)\\nreturn computeDirectionalLightFalloff_GLTF(lightDirection,directionToLightCenterW,lightAngleScale,lightAngleOffset);\\n#else\\nreturn computeDirectionalLightFalloff_Standard(lightDirection,directionToLightCenterW,cosHalfAngle,exponent);\\n#endif\\n}\";t.Effect.IncludesShadersStore[e]=n;var i={name:e,shader:n};exports.pbrDirectLightingFalloffFunctions=i;"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../sourceES6/core/Shaders/ShadersInclude/pbrDirectLightingFalloffFunctions.ts","name":null,"original":{"line":81,"column":7},"generated":{"line":1,"column":0}},{"source":"../../../../sourceES6/core/Shaders/ShadersInclude/pbrDirectLightingFalloffFunctions.ts","name":null,"original":{"line":81,"column":7},"generated":{"line":1,"column":13}},{"source":"../../../../sourceES6/core/Shaders/ShadersInclude/pbrDirectLightingFalloffFunctions.ts","name":null,"original":{"line":81,"column":7},"generated":{"line":1,"column":20}},{"source":"../../../../sourceES6/core/Shaders/ShadersInclude/pbrDirectLightingFalloffFunctions.ts","name":null,"original":{"line":81,"column":7},"generated":{"line":1,"column":35}},{"source":"../../../../sourceES6/core/Shaders/ShadersInclude/pbrDirectLightingFalloffFunctions.ts","name":null,"original":{"line":81,"column":7},"generated":{"line":1,"column":43}},{"source":"../../../../sourceES6/core/Shaders/ShadersInclude/pbrDirectLightingFalloffFunctions.ts","name":null,"original":{"line":81,"column":7},"generated":{"line":1,"column":56}},{"source":"../../../../sourceES6/core/Shaders/ShadersInclude/pbrDirectLightingFalloffFunctions.ts","name":null,"original":{"line":81,"column":7},"generated":{"line":1,"column":57}},{"source":"../../../../sourceES6/core/Shaders/ShadersInclude/pbrDirectLightingFalloffFunctions.ts","name":null,"original":{"line":81,"column":7},"generated":{"line":1,"column":64}},{"source":"../../../../sourceES6/core/Shaders/ShadersInclude/pbrDirectLightingFalloffFunctions.ts","name":null,"original":{"line":81,"column":7},"generated":{"line":1,"column":68}},{"source":"../../../../sourceES6/core/Shaders/ShadersInclude/pbrDirectLightingFalloffFunctions.ts","name":null,"original":{"line":81,"column":7},"generated":{"line":1,"column":76}},{"source":"../../../../sourceES6/core/Shaders/ShadersInclude/pbrDirectLightingFalloffFunctions.ts","name":null,"original":{"line":81,"column":7},"generated":{"line":1,"column":115}},{"source":"../../../../sourceES6/core/Shaders/ShadersInclude/pbrDirectLightingFalloffFunctions.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":117}},{"source":"../../../../sourceES6/core/Shaders/ShadersInclude/pbrDirectLightingFalloffFunctions.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":121}},{"source":"../../../../sourceES6/core/Shaders/ShadersInclude/pbrDirectLightingFalloffFunctions.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":123}},{"source":"../../../../sourceES6/core/Shaders/ShadersInclude/pbrDirectLightingFalloffFunctions.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":131}},{"source":"../../../../sourceES6/core/Shaders/ShadersInclude/pbrDirectLightingFalloffFunctions.ts","name":null,"original":{"line":3,"column":4},"generated":{"line":1,"column":157}},{"source":"../../../../sourceES6/core/Shaders/ShadersInclude/pbrDirectLightingFalloffFunctions.ts","name":null,"original":{"line":3,"column":11},"generated":{"line":1,"column":159}},{"source":"../../../../sourceES6/core/Shaders/ShadersInclude/pbrDirectLightingFalloffFunctions.ts","name":null,"original":{"line":4,"column":4},"generated":{"line":1,"column":195}},{"source":"../../../../sourceES6/core/Shaders/ShadersInclude/pbrDirectLightingFalloffFunctions.ts","name":null,"original":{"line":4,"column":13},"generated":{"line":1,"column":197}},{"source":"../../../../sourceES6/core/Shaders/ShadersInclude/pbrDirectLightingFalloffFunctions.ts","name":null,"original":{"line":79,"column":0},"generated":{"line":1,"column":2913}},{"source":"../../../../sourceES6/core/Shaders/ShadersInclude/pbrDirectLightingFalloffFunctions.ts","name":null,"original":{"line":79,"column":7},"generated":{"line":1,"column":2915}},{"source":"../../../../sourceES6/core/Shaders/ShadersInclude/pbrDirectLightingFalloffFunctions.ts","name":null,"original":{"line":79,"column":7},"generated":{"line":1,"column":2922}},{"source":"../../../../sourceES6/core/Shaders/ShadersInclude/pbrDirectLightingFalloffFunctions.ts","name":null,"original":{"line":79,"column":28},"generated":{"line":1,"column":2943}},{"source":"../../../../sourceES6/core/Shaders/ShadersInclude/pbrDirectLightingFalloffFunctions.ts","name":null,"original":{"line":79,"column":36},"generated":{"line":1,"column":2946}},{"source":"../../../../sourceES6/core/Shaders/ShadersInclude/pbrDirectLightingFalloffFunctions.ts","name":null,"original":{"line":81,"column":7},"generated":{"line":1,"column":2948}},{"source":"../../../../sourceES6/core/Shaders/ShadersInclude/pbrDirectLightingFalloffFunctions.ts","name":null,"original":{"line":81,"column":11},"generated":{"line":1,"column":2952}},{"source":"../../../../sourceES6/core/Shaders/ShadersInclude/pbrDirectLightingFalloffFunctions.ts","name":null,"original":{"line":81,"column":47},"generated":{"line":1,"column":2954}},{"source":"../../../../sourceES6/core/Shaders/ShadersInclude/pbrDirectLightingFalloffFunctions.ts","name":null,"original":{"line":81,"column":49},"generated":{"line":1,"column":2955}},{"source":"../../../../sourceES6/core/Shaders/ShadersInclude/pbrDirectLightingFalloffFunctions.ts","name":null,"original":{"line":81,"column":53},"generated":{"line":1,"column":2960}},{"source":"../../../../sourceES6/core/Shaders/ShadersInclude/pbrDirectLightingFalloffFunctions.ts","name":null,"original":{"line":81,"column":55},"generated":{"line":1,"column":2962}},{"source":"../../../../sourceES6/core/Shaders/ShadersInclude/pbrDirectLightingFalloffFunctions.ts","name":null,"original":{"line":81,"column":61},"generated":{"line":1,"column":2969}},{"source":"../../../../sourceES6/core/Shaders/ShadersInclude/pbrDirectLightingFalloffFunctions.ts","name":null,"original":{"line":81,"column":7},"generated":{"line":1,"column":2972}},{"source":"../../../../sourceES6/core/Shaders/ShadersInclude/pbrDirectLightingFalloffFunctions.ts","name":null,"original":{"line":81,"column":7},"generated":{"line":1,"column":2980}},{"source":"../../../../sourceES6/core/Shaders/ShadersInclude/pbrDirectLightingFalloffFunctions.ts","name":null,"original":{"line":81,"column":7},"generated":{"line":1,"column":3014}}],"sources":{"../../../../sourceES6/core/Shaders/ShadersInclude/pbrDirectLightingFalloffFunctions.ts":"import { Effect } from \"../../Materials/effect\";\n\nlet name = 'pbrDirectLightingFalloffFunctions';\nlet shader = `float computeDistanceLightFalloff_Standard(vec3 lightOffset,float range)\n{\nreturn max(0.,1.0-length(lightOffset)/range);\n}\nfloat computeDistanceLightFalloff_Physical(float lightDistanceSquared)\n{\nreturn 1.0/maxEps(lightDistanceSquared);\n}\nfloat computeDistanceLightFalloff_GLTF(float lightDistanceSquared,float inverseSquaredRange)\n{\nfloat lightDistanceFalloff=1.0/maxEps(lightDistanceSquared);\nfloat factor=lightDistanceSquared*inverseSquaredRange;\nfloat attenuation=saturate(1.0-factor*factor);\nattenuation*=attenuation;\n\nlightDistanceFalloff*=attenuation;\nreturn lightDistanceFalloff;\n}\nfloat computeDistanceLightFalloff(vec3 lightOffset,float lightDistanceSquared,float range,float inverseSquaredRange)\n{\n#ifdef USEPHYSICALLIGHTFALLOFF\nreturn computeDistanceLightFalloff_Physical(lightDistanceSquared);\n#elif defined(USEGLTFLIGHTFALLOFF)\nreturn computeDistanceLightFalloff_GLTF(lightDistanceSquared,inverseSquaredRange);\n#else\nreturn computeDistanceLightFalloff_Standard(lightOffset,range);\n#endif\n}\nfloat computeDirectionalLightFalloff_Standard(vec3 lightDirection,vec3 directionToLightCenterW,float cosHalfAngle,float exponent)\n{\nfloat falloff=0.0;\nfloat cosAngle=maxEps(dot(-lightDirection,directionToLightCenterW));\nif (cosAngle>=cosHalfAngle)\n{\nfalloff=max(0.,pow(cosAngle,exponent));\n}\nreturn falloff;\n}\nfloat computeDirectionalLightFalloff_Physical(vec3 lightDirection,vec3 directionToLightCenterW,float cosHalfAngle)\n{\nconst float kMinusLog2ConeAngleIntensityRatio=6.64385618977;\n\n\n\n\n\nfloat concentrationKappa=kMinusLog2ConeAngleIntensityRatio/(1.0-cosHalfAngle);\n\n\nvec4 lightDirectionSpreadSG=vec4(-lightDirection*concentrationKappa,-concentrationKappa);\nfloat falloff=exp2(dot(vec4(directionToLightCenterW,1.0),lightDirectionSpreadSG));\nreturn falloff;\n}\nfloat computeDirectionalLightFalloff_GLTF(vec3 lightDirection,vec3 directionToLightCenterW,float lightAngleScale,float lightAngleOffset)\n{\n\n\n\nfloat cd=dot(-lightDirection,directionToLightCenterW);\nfloat falloff=saturate(cd*lightAngleScale+lightAngleOffset);\n\nfalloff*=falloff;\nreturn falloff;\n}\nfloat computeDirectionalLightFalloff(vec3 lightDirection,vec3 directionToLightCenterW,float cosHalfAngle,float exponent,float lightAngleScale,float lightAngleOffset)\n{\n#ifdef USEPHYSICALLIGHTFALLOFF\nreturn computeDirectionalLightFalloff_Physical(lightDirection,directionToLightCenterW,cosHalfAngle);\n#elif defined(USEGLTFLIGHTFALLOFF)\nreturn computeDirectionalLightFalloff_GLTF(lightDirection,directionToLightCenterW,lightAngleScale,lightAngleOffset);\n#else\nreturn computeDirectionalLightFalloff_Standard(lightDirection,directionToLightCenterW,cosHalfAngle,exponent);\n#endif\n}`;\n\nEffect.IncludesShadersStore[name] = shader;\n/** @hidden */\nexport var pbrDirectLightingFalloffFunctions = { name, shader };\n"},"lineCount":null}},"error":null,"hash":"fc311284ee3bf0b39129c8d40a5ffdea","cacheData":{"env":{}}}