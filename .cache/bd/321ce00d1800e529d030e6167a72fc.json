{"id":"xMdT","dependencies":[{"name":"/Users/hujy/GT/Spring20/3DU/3DPainter/node_modules/@babylonjs/core/Shaders/noise.fragment.js.map","includedInParent":true,"mtime":1556745104000},{"name":"/Users/hujy/GT/Spring20/3DU/3DPainter/package.json","includedInParent":true,"mtime":1588539929318},{"name":"/Users/hujy/GT/Spring20/3DU/3DPainter/node_modules/@babylonjs/core/package.json","includedInParent":true,"mtime":1588537596306},{"name":"../Materials/effect","loc":{"line":1,"column":23},"parent":"/Users/hujy/GT/Spring20/3DU/3DPainter/node_modules/@babylonjs/core/Shaders/noise.fragment.js","resolved":"/Users/hujy/GT/Spring20/3DU/3DPainter/node_modules/@babylonjs/core/Materials/effect.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.noisePixelShader=void 0;var e=require(\"../Materials/effect\"),n=\"noisePixelShader\",o=\"\\n\\nuniform float brightness;\\nuniform float persistence;\\nuniform float timeScale;\\n\\nvarying vec2 vUV;\\n\\nvec2 hash22(vec2 p)\\n{\\np=p*mat2(127.1,311.7,269.5,183.3);\\np=-1.0+2.0*fract(sin(p)*43758.5453123);\\nreturn sin(p*6.283+timeScale);\\n}\\nfloat interpolationNoise(vec2 p)\\n{\\nvec2 pi=floor(p);\\nvec2 pf=p-pi;\\nvec2 w=pf*pf*(3.-2.*pf);\\nfloat f00=dot(hash22(pi+vec2(.0,.0)),pf-vec2(.0,.0));\\nfloat f01=dot(hash22(pi+vec2(.0,1.)),pf-vec2(.0,1.));\\nfloat f10=dot(hash22(pi+vec2(1.0,0.)),pf-vec2(1.0,0.));\\nfloat f11=dot(hash22(pi+vec2(1.0,1.)),pf-vec2(1.0,1.));\\nfloat xm1=mix(f00,f10,w.x);\\nfloat xm2=mix(f01,f11,w.x);\\nfloat ym=mix(xm1,xm2,w.y);\\nreturn ym;\\n}\\nfloat perlinNoise2D(float x,float y)\\n{\\nfloat sum=0.0;\\nfloat frequency=0.0;\\nfloat amplitude=0.0;\\nfor(int i=0; i<OCTAVES; i++)\\n{\\nfrequency=pow(2.0,float(i));\\namplitude=pow(persistence,float(i));\\nsum=sum+interpolationNoise(vec2(x*frequency,y*frequency))*amplitude;\\n}\\nreturn sum;\\n}\\n\\nvoid main(void)\\n{\\nfloat x=abs(vUV.x);\\nfloat y=abs(vUV.y);\\nfloat noise=brightness+(1.0-brightness)*perlinNoise2D(x,y);\\ngl_FragColor=vec4(noise,noise,noise,1.0);\\n}\\n\";e.Effect.ShadersStore[n]=o;var i={name:n,shader:o};exports.noisePixelShader=i;"},"sourceMaps":{"js":{"mappings":[{"source":"../../../sourceES6/core/Shaders/noise.fragment.ts","name":null,"original":{"line":57,"column":7},"generated":{"line":1,"column":0}},{"source":"../../../sourceES6/core/Shaders/noise.fragment.ts","name":null,"original":{"line":57,"column":7},"generated":{"line":1,"column":13}},{"source":"../../../sourceES6/core/Shaders/noise.fragment.ts","name":null,"original":{"line":57,"column":7},"generated":{"line":1,"column":20}},{"source":"../../../sourceES6/core/Shaders/noise.fragment.ts","name":null,"original":{"line":57,"column":7},"generated":{"line":1,"column":35}},{"source":"../../../sourceES6/core/Shaders/noise.fragment.ts","name":null,"original":{"line":57,"column":7},"generated":{"line":1,"column":43}},{"source":"../../../sourceES6/core/Shaders/noise.fragment.ts","name":null,"original":{"line":57,"column":7},"generated":{"line":1,"column":56}},{"source":"../../../sourceES6/core/Shaders/noise.fragment.ts","name":null,"original":{"line":57,"column":7},"generated":{"line":1,"column":57}},{"source":"../../../sourceES6/core/Shaders/noise.fragment.ts","name":null,"original":{"line":57,"column":7},"generated":{"line":1,"column":64}},{"source":"../../../sourceES6/core/Shaders/noise.fragment.ts","name":null,"original":{"line":57,"column":7},"generated":{"line":1,"column":68}},{"source":"../../../sourceES6/core/Shaders/noise.fragment.ts","name":null,"original":{"line":57,"column":7},"generated":{"line":1,"column":76}},{"source":"../../../sourceES6/core/Shaders/noise.fragment.ts","name":null,"original":{"line":57,"column":7},"generated":{"line":1,"column":98}},{"source":"../../../sourceES6/core/Shaders/noise.fragment.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":100}},{"source":"../../../sourceES6/core/Shaders/noise.fragment.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":104}},{"source":"../../../sourceES6/core/Shaders/noise.fragment.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":106}},{"source":"../../../sourceES6/core/Shaders/noise.fragment.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":114}},{"source":"../../../sourceES6/core/Shaders/noise.fragment.ts","name":null,"original":{"line":3,"column":4},"generated":{"line":1,"column":137}},{"source":"../../../sourceES6/core/Shaders/noise.fragment.ts","name":null,"original":{"line":3,"column":11},"generated":{"line":1,"column":139}},{"source":"../../../sourceES6/core/Shaders/noise.fragment.ts","name":null,"original":{"line":4,"column":4},"generated":{"line":1,"column":158}},{"source":"../../../sourceES6/core/Shaders/noise.fragment.ts","name":null,"original":{"line":4,"column":13},"generated":{"line":1,"column":160}},{"source":"../../../sourceES6/core/Shaders/noise.fragment.ts","name":null,"original":{"line":55,"column":0},"generated":{"line":1,"column":1291}},{"source":"../../../sourceES6/core/Shaders/noise.fragment.ts","name":null,"original":{"line":55,"column":7},"generated":{"line":1,"column":1293}},{"source":"../../../sourceES6/core/Shaders/noise.fragment.ts","name":null,"original":{"line":55,"column":7},"generated":{"line":1,"column":1300}},{"source":"../../../sourceES6/core/Shaders/noise.fragment.ts","name":null,"original":{"line":55,"column":20},"generated":{"line":1,"column":1313}},{"source":"../../../sourceES6/core/Shaders/noise.fragment.ts","name":null,"original":{"line":55,"column":28},"generated":{"line":1,"column":1316}},{"source":"../../../sourceES6/core/Shaders/noise.fragment.ts","name":null,"original":{"line":57,"column":7},"generated":{"line":1,"column":1318}},{"source":"../../../sourceES6/core/Shaders/noise.fragment.ts","name":null,"original":{"line":57,"column":11},"generated":{"line":1,"column":1322}},{"source":"../../../sourceES6/core/Shaders/noise.fragment.ts","name":null,"original":{"line":57,"column":30},"generated":{"line":1,"column":1324}},{"source":"../../../sourceES6/core/Shaders/noise.fragment.ts","name":null,"original":{"line":57,"column":32},"generated":{"line":1,"column":1325}},{"source":"../../../sourceES6/core/Shaders/noise.fragment.ts","name":null,"original":{"line":57,"column":36},"generated":{"line":1,"column":1330}},{"source":"../../../sourceES6/core/Shaders/noise.fragment.ts","name":null,"original":{"line":57,"column":38},"generated":{"line":1,"column":1332}},{"source":"../../../sourceES6/core/Shaders/noise.fragment.ts","name":null,"original":{"line":57,"column":44},"generated":{"line":1,"column":1339}},{"source":"../../../sourceES6/core/Shaders/noise.fragment.ts","name":null,"original":{"line":57,"column":7},"generated":{"line":1,"column":1342}},{"source":"../../../sourceES6/core/Shaders/noise.fragment.ts","name":null,"original":{"line":57,"column":7},"generated":{"line":1,"column":1350}},{"source":"../../../sourceES6/core/Shaders/noise.fragment.ts","name":null,"original":{"line":57,"column":7},"generated":{"line":1,"column":1367}}],"sources":{"../../../sourceES6/core/Shaders/noise.fragment.ts":"import { Effect } from \"../Materials/effect\";\n\nlet name = 'noisePixelShader';\nlet shader = `\n\nuniform float brightness;\nuniform float persistence;\nuniform float timeScale;\n\nvarying vec2 vUV;\n\nvec2 hash22(vec2 p)\n{\np=p*mat2(127.1,311.7,269.5,183.3);\np=-1.0+2.0*fract(sin(p)*43758.5453123);\nreturn sin(p*6.283+timeScale);\n}\nfloat interpolationNoise(vec2 p)\n{\nvec2 pi=floor(p);\nvec2 pf=p-pi;\nvec2 w=pf*pf*(3.-2.*pf);\nfloat f00=dot(hash22(pi+vec2(.0,.0)),pf-vec2(.0,.0));\nfloat f01=dot(hash22(pi+vec2(.0,1.)),pf-vec2(.0,1.));\nfloat f10=dot(hash22(pi+vec2(1.0,0.)),pf-vec2(1.0,0.));\nfloat f11=dot(hash22(pi+vec2(1.0,1.)),pf-vec2(1.0,1.));\nfloat xm1=mix(f00,f10,w.x);\nfloat xm2=mix(f01,f11,w.x);\nfloat ym=mix(xm1,xm2,w.y);\nreturn ym;\n}\nfloat perlinNoise2D(float x,float y)\n{\nfloat sum=0.0;\nfloat frequency=0.0;\nfloat amplitude=0.0;\nfor(int i=0; i<OCTAVES; i++)\n{\nfrequency=pow(2.0,float(i));\namplitude=pow(persistence,float(i));\nsum=sum+interpolationNoise(vec2(x*frequency,y*frequency))*amplitude;\n}\nreturn sum;\n}\n\nvoid main(void)\n{\nfloat x=abs(vUV.x);\nfloat y=abs(vUV.y);\nfloat noise=brightness+(1.0-brightness)*perlinNoise2D(x,y);\ngl_FragColor=vec4(noise,noise,noise,1.0);\n}\n`;\n\nEffect.ShadersStore[name] = shader;\n/** @hidden */\nexport var noisePixelShader = { name, shader };\n"},"lineCount":null}},"error":null,"hash":"ecfd154cc3f48d514b4c35cbb4c33f16","cacheData":{"env":{}}}