{"id":"PSgJ","dependencies":[{"name":"/Users/hujy/GT/Spring20/3DU/3DPainter/node_modules/@babylonjs/core/Shaders/ShadersInclude/lightsFragmentFunctions.js.map","includedInParent":true,"mtime":1556745103000},{"name":"/Users/hujy/GT/Spring20/3DU/3DPainter/package.json","includedInParent":true,"mtime":1588539929318},{"name":"/Users/hujy/GT/Spring20/3DU/3DPainter/node_modules/@babylonjs/core/package.json","includedInParent":true,"mtime":1588537596306},{"name":"../../Materials/effect","loc":{"line":1,"column":23},"parent":"/Users/hujy/GT/Spring20/3DU/3DPainter/node_modules/@babylonjs/core/Shaders/ShadersInclude/lightsFragmentFunctions.js","resolved":"/Users/hujy/GT/Spring20/3DU/3DPainter/node_modules/@babylonjs/core/Materials/effect.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.lightsFragmentFunctions=void 0;var e=require(\"../../Materials/effect\"),n=\"lightsFragmentFunctions\",t=\"\\nstruct lightingInfo\\n{\\nvec3 diffuse;\\n#ifdef SPECULARTERM\\nvec3 specular;\\n#endif\\n#ifdef NDOTL\\nfloat ndl;\\n#endif\\n};\\nlightingInfo computeLighting(vec3 viewDirectionW,vec3 vNormal,vec4 lightData,vec3 diffuseColor,vec3 specularColor,float range,float glossiness) {\\nlightingInfo result;\\nvec3 lightVectorW;\\nfloat attenuation=1.0;\\nif (lightData.w == 0.)\\n{\\nvec3 direction=lightData.xyz-vPositionW;\\nattenuation=max(0.,1.0-length(direction)/range);\\nlightVectorW=normalize(direction);\\n}\\nelse\\n{\\nlightVectorW=normalize(-lightData.xyz);\\n}\\n\\nfloat ndl=max(0.,dot(vNormal,lightVectorW));\\n#ifdef NDOTL\\nresult.ndl=ndl;\\n#endif\\nresult.diffuse=ndl*diffuseColor*attenuation;\\n#ifdef SPECULARTERM\\n\\nvec3 angleW=normalize(viewDirectionW+lightVectorW);\\nfloat specComp=max(0.,dot(vNormal,angleW));\\nspecComp=pow(specComp,max(1.,glossiness));\\nresult.specular=specComp*specularColor*attenuation;\\n#endif\\nreturn result;\\n}\\nlightingInfo computeSpotLighting(vec3 viewDirectionW,vec3 vNormal,vec4 lightData,vec4 lightDirection,vec3 diffuseColor,vec3 specularColor,float range,float glossiness) {\\nlightingInfo result;\\nvec3 direction=lightData.xyz-vPositionW;\\nvec3 lightVectorW=normalize(direction);\\nfloat attenuation=max(0.,1.0-length(direction)/range);\\n\\nfloat cosAngle=max(0.,dot(lightDirection.xyz,-lightVectorW));\\nif (cosAngle>=lightDirection.w)\\n{\\ncosAngle=max(0.,pow(cosAngle,lightData.w));\\nattenuation*=cosAngle;\\n\\nfloat ndl=max(0.,dot(vNormal,lightVectorW));\\n#ifdef NDOTL\\nresult.ndl=ndl;\\n#endif\\nresult.diffuse=ndl*diffuseColor*attenuation;\\n#ifdef SPECULARTERM\\n\\nvec3 angleW=normalize(viewDirectionW+lightVectorW);\\nfloat specComp=max(0.,dot(vNormal,angleW));\\nspecComp=pow(specComp,max(1.,glossiness));\\nresult.specular=specComp*specularColor*attenuation;\\n#endif\\nreturn result;\\n}\\nresult.diffuse=vec3(0.);\\n#ifdef SPECULARTERM\\nresult.specular=vec3(0.);\\n#endif\\n#ifdef NDOTL\\nresult.ndl=0.;\\n#endif\\nreturn result;\\n}\\nlightingInfo computeHemisphericLighting(vec3 viewDirectionW,vec3 vNormal,vec4 lightData,vec3 diffuseColor,vec3 specularColor,vec3 groundColor,float glossiness) {\\nlightingInfo result;\\n\\nfloat ndl=dot(vNormal,lightData.xyz)*0.5+0.5;\\n#ifdef NDOTL\\nresult.ndl=ndl;\\n#endif\\nresult.diffuse=mix(groundColor,diffuseColor,ndl);\\n#ifdef SPECULARTERM\\n\\nvec3 angleW=normalize(viewDirectionW+lightData.xyz);\\nfloat specComp=max(0.,dot(vNormal,angleW));\\nspecComp=pow(specComp,max(1.,glossiness));\\nresult.specular=specComp*specularColor;\\n#endif\\nreturn result;\\n}\\nvec3 computeProjectionTextureDiffuseLighting(sampler2D projectionLightSampler,mat4 textureProjectionMatrix){\\nvec4 strq=textureProjectionMatrix*vec4(vPositionW,1.0);\\nstrq/=strq.w;\\nvec3 textureColor=texture2D(projectionLightSampler,strq.xy).rgb;\\nreturn textureColor;\\n}\";e.Effect.IncludesShadersStore[n]=t;var o={name:n,shader:t};exports.lightsFragmentFunctions=o;"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../sourceES6/core/Shaders/ShadersInclude/lightsFragmentFunctions.ts","name":null,"original":{"line":105,"column":7},"generated":{"line":1,"column":0}},{"source":"../../../../sourceES6/core/Shaders/ShadersInclude/lightsFragmentFunctions.ts","name":null,"original":{"line":105,"column":7},"generated":{"line":1,"column":13}},{"source":"../../../../sourceES6/core/Shaders/ShadersInclude/lightsFragmentFunctions.ts","name":null,"original":{"line":105,"column":7},"generated":{"line":1,"column":20}},{"source":"../../../../sourceES6/core/Shaders/ShadersInclude/lightsFragmentFunctions.ts","name":null,"original":{"line":105,"column":7},"generated":{"line":1,"column":35}},{"source":"../../../../sourceES6/core/Shaders/ShadersInclude/lightsFragmentFunctions.ts","name":null,"original":{"line":105,"column":7},"generated":{"line":1,"column":43}},{"source":"../../../../sourceES6/core/Shaders/ShadersInclude/lightsFragmentFunctions.ts","name":null,"original":{"line":105,"column":7},"generated":{"line":1,"column":56}},{"source":"../../../../sourceES6/core/Shaders/ShadersInclude/lightsFragmentFunctions.ts","name":null,"original":{"line":105,"column":7},"generated":{"line":1,"column":57}},{"source":"../../../../sourceES6/core/Shaders/ShadersInclude/lightsFragmentFunctions.ts","name":null,"original":{"line":105,"column":7},"generated":{"line":1,"column":64}},{"source":"../../../../sourceES6/core/Shaders/ShadersInclude/lightsFragmentFunctions.ts","name":null,"original":{"line":105,"column":7},"generated":{"line":1,"column":68}},{"source":"../../../../sourceES6/core/Shaders/ShadersInclude/lightsFragmentFunctions.ts","name":null,"original":{"line":105,"column":7},"generated":{"line":1,"column":76}},{"source":"../../../../sourceES6/core/Shaders/ShadersInclude/lightsFragmentFunctions.ts","name":null,"original":{"line":105,"column":7},"generated":{"line":1,"column":105}},{"source":"../../../../sourceES6/core/Shaders/ShadersInclude/lightsFragmentFunctions.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":107}},{"source":"../../../../sourceES6/core/Shaders/ShadersInclude/lightsFragmentFunctions.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":111}},{"source":"../../../../sourceES6/core/Shaders/ShadersInclude/lightsFragmentFunctions.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":113}},{"source":"../../../../sourceES6/core/Shaders/ShadersInclude/lightsFragmentFunctions.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":121}},{"source":"../../../../sourceES6/core/Shaders/ShadersInclude/lightsFragmentFunctions.ts","name":null,"original":{"line":3,"column":4},"generated":{"line":1,"column":147}},{"source":"../../../../sourceES6/core/Shaders/ShadersInclude/lightsFragmentFunctions.ts","name":null,"original":{"line":3,"column":11},"generated":{"line":1,"column":149}},{"source":"../../../../sourceES6/core/Shaders/ShadersInclude/lightsFragmentFunctions.ts","name":null,"original":{"line":4,"column":4},"generated":{"line":1,"column":175}},{"source":"../../../../sourceES6/core/Shaders/ShadersInclude/lightsFragmentFunctions.ts","name":null,"original":{"line":4,"column":13},"generated":{"line":1,"column":177}},{"source":"../../../../sourceES6/core/Shaders/ShadersInclude/lightsFragmentFunctions.ts","name":null,"original":{"line":103,"column":0},"generated":{"line":1,"column":2954}},{"source":"../../../../sourceES6/core/Shaders/ShadersInclude/lightsFragmentFunctions.ts","name":null,"original":{"line":103,"column":7},"generated":{"line":1,"column":2956}},{"source":"../../../../sourceES6/core/Shaders/ShadersInclude/lightsFragmentFunctions.ts","name":null,"original":{"line":103,"column":7},"generated":{"line":1,"column":2963}},{"source":"../../../../sourceES6/core/Shaders/ShadersInclude/lightsFragmentFunctions.ts","name":null,"original":{"line":103,"column":28},"generated":{"line":1,"column":2984}},{"source":"../../../../sourceES6/core/Shaders/ShadersInclude/lightsFragmentFunctions.ts","name":null,"original":{"line":103,"column":36},"generated":{"line":1,"column":2987}},{"source":"../../../../sourceES6/core/Shaders/ShadersInclude/lightsFragmentFunctions.ts","name":null,"original":{"line":105,"column":7},"generated":{"line":1,"column":2989}},{"source":"../../../../sourceES6/core/Shaders/ShadersInclude/lightsFragmentFunctions.ts","name":null,"original":{"line":105,"column":11},"generated":{"line":1,"column":2993}},{"source":"../../../../sourceES6/core/Shaders/ShadersInclude/lightsFragmentFunctions.ts","name":null,"original":{"line":105,"column":37},"generated":{"line":1,"column":2995}},{"source":"../../../../sourceES6/core/Shaders/ShadersInclude/lightsFragmentFunctions.ts","name":null,"original":{"line":105,"column":39},"generated":{"line":1,"column":2996}},{"source":"../../../../sourceES6/core/Shaders/ShadersInclude/lightsFragmentFunctions.ts","name":null,"original":{"line":105,"column":43},"generated":{"line":1,"column":3001}},{"source":"../../../../sourceES6/core/Shaders/ShadersInclude/lightsFragmentFunctions.ts","name":null,"original":{"line":105,"column":45},"generated":{"line":1,"column":3003}},{"source":"../../../../sourceES6/core/Shaders/ShadersInclude/lightsFragmentFunctions.ts","name":null,"original":{"line":105,"column":51},"generated":{"line":1,"column":3010}},{"source":"../../../../sourceES6/core/Shaders/ShadersInclude/lightsFragmentFunctions.ts","name":null,"original":{"line":105,"column":7},"generated":{"line":1,"column":3013}},{"source":"../../../../sourceES6/core/Shaders/ShadersInclude/lightsFragmentFunctions.ts","name":null,"original":{"line":105,"column":7},"generated":{"line":1,"column":3021}},{"source":"../../../../sourceES6/core/Shaders/ShadersInclude/lightsFragmentFunctions.ts","name":null,"original":{"line":105,"column":7},"generated":{"line":1,"column":3045}}],"sources":{"../../../../sourceES6/core/Shaders/ShadersInclude/lightsFragmentFunctions.ts":"import { Effect } from \"../../Materials/effect\";\n\nlet name = 'lightsFragmentFunctions';\nlet shader = `\nstruct lightingInfo\n{\nvec3 diffuse;\n#ifdef SPECULARTERM\nvec3 specular;\n#endif\n#ifdef NDOTL\nfloat ndl;\n#endif\n};\nlightingInfo computeLighting(vec3 viewDirectionW,vec3 vNormal,vec4 lightData,vec3 diffuseColor,vec3 specularColor,float range,float glossiness) {\nlightingInfo result;\nvec3 lightVectorW;\nfloat attenuation=1.0;\nif (lightData.w == 0.)\n{\nvec3 direction=lightData.xyz-vPositionW;\nattenuation=max(0.,1.0-length(direction)/range);\nlightVectorW=normalize(direction);\n}\nelse\n{\nlightVectorW=normalize(-lightData.xyz);\n}\n\nfloat ndl=max(0.,dot(vNormal,lightVectorW));\n#ifdef NDOTL\nresult.ndl=ndl;\n#endif\nresult.diffuse=ndl*diffuseColor*attenuation;\n#ifdef SPECULARTERM\n\nvec3 angleW=normalize(viewDirectionW+lightVectorW);\nfloat specComp=max(0.,dot(vNormal,angleW));\nspecComp=pow(specComp,max(1.,glossiness));\nresult.specular=specComp*specularColor*attenuation;\n#endif\nreturn result;\n}\nlightingInfo computeSpotLighting(vec3 viewDirectionW,vec3 vNormal,vec4 lightData,vec4 lightDirection,vec3 diffuseColor,vec3 specularColor,float range,float glossiness) {\nlightingInfo result;\nvec3 direction=lightData.xyz-vPositionW;\nvec3 lightVectorW=normalize(direction);\nfloat attenuation=max(0.,1.0-length(direction)/range);\n\nfloat cosAngle=max(0.,dot(lightDirection.xyz,-lightVectorW));\nif (cosAngle>=lightDirection.w)\n{\ncosAngle=max(0.,pow(cosAngle,lightData.w));\nattenuation*=cosAngle;\n\nfloat ndl=max(0.,dot(vNormal,lightVectorW));\n#ifdef NDOTL\nresult.ndl=ndl;\n#endif\nresult.diffuse=ndl*diffuseColor*attenuation;\n#ifdef SPECULARTERM\n\nvec3 angleW=normalize(viewDirectionW+lightVectorW);\nfloat specComp=max(0.,dot(vNormal,angleW));\nspecComp=pow(specComp,max(1.,glossiness));\nresult.specular=specComp*specularColor*attenuation;\n#endif\nreturn result;\n}\nresult.diffuse=vec3(0.);\n#ifdef SPECULARTERM\nresult.specular=vec3(0.);\n#endif\n#ifdef NDOTL\nresult.ndl=0.;\n#endif\nreturn result;\n}\nlightingInfo computeHemisphericLighting(vec3 viewDirectionW,vec3 vNormal,vec4 lightData,vec3 diffuseColor,vec3 specularColor,vec3 groundColor,float glossiness) {\nlightingInfo result;\n\nfloat ndl=dot(vNormal,lightData.xyz)*0.5+0.5;\n#ifdef NDOTL\nresult.ndl=ndl;\n#endif\nresult.diffuse=mix(groundColor,diffuseColor,ndl);\n#ifdef SPECULARTERM\n\nvec3 angleW=normalize(viewDirectionW+lightData.xyz);\nfloat specComp=max(0.,dot(vNormal,angleW));\nspecComp=pow(specComp,max(1.,glossiness));\nresult.specular=specComp*specularColor;\n#endif\nreturn result;\n}\nvec3 computeProjectionTextureDiffuseLighting(sampler2D projectionLightSampler,mat4 textureProjectionMatrix){\nvec4 strq=textureProjectionMatrix*vec4(vPositionW,1.0);\nstrq/=strq.w;\nvec3 textureColor=texture2D(projectionLightSampler,strq.xy).rgb;\nreturn textureColor;\n}`;\n\nEffect.IncludesShadersStore[name] = shader;\n/** @hidden */\nexport var lightsFragmentFunctions = { name, shader };\n"},"lineCount":null}},"error":null,"hash":"b2efa4bca6e29a9edf2a8feccf4abc09","cacheData":{"env":{}}}