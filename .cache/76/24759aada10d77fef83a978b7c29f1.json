{"id":"vYga","dependencies":[{"name":"/Users/hujy/GT/Spring20/3DU/3DPainter/node_modules/@babylonjs/core/Shaders/colorCorrection.fragment.js.map","includedInParent":true,"mtime":1556745105000},{"name":"/Users/hujy/GT/Spring20/3DU/3DPainter/package.json","includedInParent":true,"mtime":1588539929318},{"name":"/Users/hujy/GT/Spring20/3DU/3DPainter/node_modules/@babylonjs/core/package.json","includedInParent":true,"mtime":1588537596306},{"name":"../Materials/effect","loc":{"line":1,"column":23},"parent":"/Users/hujy/GT/Spring20/3DU/3DPainter/node_modules/@babylonjs/core/Shaders/colorCorrection.fragment.js","resolved":"/Users/hujy/GT/Spring20/3DU/3DPainter/node_modules/@babylonjs/core/Materials/effect.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.colorCorrectionPixelShader=void 0;var e=require(\"../Materials/effect\"),r=\"colorCorrectionPixelShader\",l=\"\\nuniform sampler2D textureSampler;\\nuniform sampler2D colorTable;\\n\\nvarying vec2 vUV;\\n\\nconst float SLICE_COUNT=16.0;\\n\\nvec4 sampleAs3DTexture(sampler2D textureSampler,vec3 uv,float width) {\\nfloat sliceSize=1.0/width;\\nfloat slicePixelSize=sliceSize/width;\\nfloat sliceInnerSize=slicePixelSize*(width-1.0);\\nfloat zSlice0=min(floor(uv.z*width),width-1.0);\\nfloat zSlice1=min(zSlice0+1.0,width-1.0);\\nfloat xOffset=slicePixelSize*0.5+uv.x*sliceInnerSize;\\nfloat s0=xOffset+(zSlice0*sliceSize);\\nfloat s1=xOffset+(zSlice1*sliceSize);\\nvec4 slice0Color=texture2D(textureSampler,vec2(s0,uv.y));\\nvec4 slice1Color=texture2D(textureSampler,vec2(s1,uv.y));\\nfloat zOffset=mod(uv.z*width,1.0);\\nvec4 result=mix(slice0Color,slice1Color,zOffset);\\nreturn result;\\n}\\nvoid main(void)\\n{\\nvec4 screen_color=texture2D(textureSampler,vUV);\\ngl_FragColor=sampleAs3DTexture(colorTable,screen_color.rgb,SLICE_COUNT);\\n}\";e.Effect.ShadersStore[r]=l;var t={name:r,shader:l};exports.colorCorrectionPixelShader=t;"},"sourceMaps":{"js":{"mappings":[{"source":"../../../sourceES6/core/Shaders/colorCorrection.fragment.ts","name":null,"original":{"line":35,"column":7},"generated":{"line":1,"column":0}},{"source":"../../../sourceES6/core/Shaders/colorCorrection.fragment.ts","name":null,"original":{"line":35,"column":7},"generated":{"line":1,"column":13}},{"source":"../../../sourceES6/core/Shaders/colorCorrection.fragment.ts","name":null,"original":{"line":35,"column":7},"generated":{"line":1,"column":20}},{"source":"../../../sourceES6/core/Shaders/colorCorrection.fragment.ts","name":null,"original":{"line":35,"column":7},"generated":{"line":1,"column":35}},{"source":"../../../sourceES6/core/Shaders/colorCorrection.fragment.ts","name":null,"original":{"line":35,"column":7},"generated":{"line":1,"column":43}},{"source":"../../../sourceES6/core/Shaders/colorCorrection.fragment.ts","name":null,"original":{"line":35,"column":7},"generated":{"line":1,"column":56}},{"source":"../../../sourceES6/core/Shaders/colorCorrection.fragment.ts","name":null,"original":{"line":35,"column":7},"generated":{"line":1,"column":57}},{"source":"../../../sourceES6/core/Shaders/colorCorrection.fragment.ts","name":null,"original":{"line":35,"column":7},"generated":{"line":1,"column":64}},{"source":"../../../sourceES6/core/Shaders/colorCorrection.fragment.ts","name":null,"original":{"line":35,"column":7},"generated":{"line":1,"column":68}},{"source":"../../../sourceES6/core/Shaders/colorCorrection.fragment.ts","name":null,"original":{"line":35,"column":7},"generated":{"line":1,"column":76}},{"source":"../../../sourceES6/core/Shaders/colorCorrection.fragment.ts","name":null,"original":{"line":35,"column":7},"generated":{"line":1,"column":108}},{"source":"../../../sourceES6/core/Shaders/colorCorrection.fragment.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":110}},{"source":"../../../sourceES6/core/Shaders/colorCorrection.fragment.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":114}},{"source":"../../../sourceES6/core/Shaders/colorCorrection.fragment.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":116}},{"source":"../../../sourceES6/core/Shaders/colorCorrection.fragment.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":124}},{"source":"../../../sourceES6/core/Shaders/colorCorrection.fragment.ts","name":null,"original":{"line":3,"column":4},"generated":{"line":1,"column":147}},{"source":"../../../sourceES6/core/Shaders/colorCorrection.fragment.ts","name":null,"original":{"line":3,"column":11},"generated":{"line":1,"column":149}},{"source":"../../../sourceES6/core/Shaders/colorCorrection.fragment.ts","name":null,"original":{"line":4,"column":4},"generated":{"line":1,"column":178}},{"source":"../../../sourceES6/core/Shaders/colorCorrection.fragment.ts","name":null,"original":{"line":4,"column":13},"generated":{"line":1,"column":180}},{"source":"../../../sourceES6/core/Shaders/colorCorrection.fragment.ts","name":null,"original":{"line":33,"column":0},"generated":{"line":1,"column":1090}},{"source":"../../../sourceES6/core/Shaders/colorCorrection.fragment.ts","name":null,"original":{"line":33,"column":7},"generated":{"line":1,"column":1092}},{"source":"../../../sourceES6/core/Shaders/colorCorrection.fragment.ts","name":null,"original":{"line":33,"column":7},"generated":{"line":1,"column":1099}},{"source":"../../../sourceES6/core/Shaders/colorCorrection.fragment.ts","name":null,"original":{"line":33,"column":20},"generated":{"line":1,"column":1112}},{"source":"../../../sourceES6/core/Shaders/colorCorrection.fragment.ts","name":null,"original":{"line":33,"column":28},"generated":{"line":1,"column":1115}},{"source":"../../../sourceES6/core/Shaders/colorCorrection.fragment.ts","name":null,"original":{"line":35,"column":7},"generated":{"line":1,"column":1117}},{"source":"../../../sourceES6/core/Shaders/colorCorrection.fragment.ts","name":null,"original":{"line":35,"column":11},"generated":{"line":1,"column":1121}},{"source":"../../../sourceES6/core/Shaders/colorCorrection.fragment.ts","name":null,"original":{"line":35,"column":40},"generated":{"line":1,"column":1123}},{"source":"../../../sourceES6/core/Shaders/colorCorrection.fragment.ts","name":null,"original":{"line":35,"column":42},"generated":{"line":1,"column":1124}},{"source":"../../../sourceES6/core/Shaders/colorCorrection.fragment.ts","name":null,"original":{"line":35,"column":46},"generated":{"line":1,"column":1129}},{"source":"../../../sourceES6/core/Shaders/colorCorrection.fragment.ts","name":null,"original":{"line":35,"column":48},"generated":{"line":1,"column":1131}},{"source":"../../../sourceES6/core/Shaders/colorCorrection.fragment.ts","name":null,"original":{"line":35,"column":54},"generated":{"line":1,"column":1138}},{"source":"../../../sourceES6/core/Shaders/colorCorrection.fragment.ts","name":null,"original":{"line":35,"column":7},"generated":{"line":1,"column":1141}},{"source":"../../../sourceES6/core/Shaders/colorCorrection.fragment.ts","name":null,"original":{"line":35,"column":7},"generated":{"line":1,"column":1149}},{"source":"../../../sourceES6/core/Shaders/colorCorrection.fragment.ts","name":null,"original":{"line":35,"column":7},"generated":{"line":1,"column":1176}}],"sources":{"../../../sourceES6/core/Shaders/colorCorrection.fragment.ts":"import { Effect } from \"../Materials/effect\";\n\nlet name = 'colorCorrectionPixelShader';\nlet shader = `\nuniform sampler2D textureSampler;\nuniform sampler2D colorTable;\n\nvarying vec2 vUV;\n\nconst float SLICE_COUNT=16.0;\n\nvec4 sampleAs3DTexture(sampler2D textureSampler,vec3 uv,float width) {\nfloat sliceSize=1.0/width;\nfloat slicePixelSize=sliceSize/width;\nfloat sliceInnerSize=slicePixelSize*(width-1.0);\nfloat zSlice0=min(floor(uv.z*width),width-1.0);\nfloat zSlice1=min(zSlice0+1.0,width-1.0);\nfloat xOffset=slicePixelSize*0.5+uv.x*sliceInnerSize;\nfloat s0=xOffset+(zSlice0*sliceSize);\nfloat s1=xOffset+(zSlice1*sliceSize);\nvec4 slice0Color=texture2D(textureSampler,vec2(s0,uv.y));\nvec4 slice1Color=texture2D(textureSampler,vec2(s1,uv.y));\nfloat zOffset=mod(uv.z*width,1.0);\nvec4 result=mix(slice0Color,slice1Color,zOffset);\nreturn result;\n}\nvoid main(void)\n{\nvec4 screen_color=texture2D(textureSampler,vUV);\ngl_FragColor=sampleAs3DTexture(colorTable,screen_color.rgb,SLICE_COUNT);\n}`;\n\nEffect.ShadersStore[name] = shader;\n/** @hidden */\nexport var colorCorrectionPixelShader = { name, shader };\n"},"lineCount":null}},"error":null,"hash":"e775145aae163ae4c58657a8d3b349f0","cacheData":{"env":{}}}